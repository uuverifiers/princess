(declare-heap Heap Addr HeapObject
 defObj
 ((HeapObject 0)) (
  (
   (O_Int (getInt Int))
   (O_Addr (getAddr Addr))
   (defObj)
  )
))

(push 1)
(echo "query 1")
(declare-fun T0 () Heap)
(assert (= T0 emptyHeap))
(assert (not (= emptyHeap T0)))
(check-sat)
(pop 1)
(push 1)
(echo "query 2")
(declare-fun P0 () Addr)
(declare-fun P1 () Addr)
(declare-fun P2 () Heap)
(declare-fun P3 () Heap)
(declare-fun P4 () Addr)
(declare-fun P5 () Addr)
(assert (and (and (= P5 P0) (= P4 P1)) (= P2 (write P3 P0 (O_Int 42)))))
(assert (and (= (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) P0) (and (= (newHeap (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) P3) (= (newAddr (alloc emptyHeap (O_Int 0))) P1))))
(assert (not (and (and (= (write (newHeap (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) P5 (O_Int 42)) P2) (= (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) P5)) (and (and (= (newAddr (alloc emptyHeap (O_Int 0))) P4) (= (newAddr (alloc emptyHeap (O_Int 0))) P4)) (= P5 P5)))))
(check-sat)
(pop 1)
(push 1)
(echo "query 3")
(declare-fun P0 () Int)
(declare-fun P1 () Addr)
(declare-fun P2 () Addr)
(declare-fun P3 () Addr)
(declare-fun P4 () Heap)
(declare-fun P5 () Int)
(declare-fun P6 () Addr)
(declare-fun T7 () Heap)
(assert (= T7 (write P4 P2 (O_Int P0))))
(assert (and (= (getInt (read (write (newHeap (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (O_Int 42)) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))))) P0) (and (and (and (and (and (= (write (newHeap (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (O_Int 42)) P4) (= (newAddr (alloc emptyHeap (O_Int 0))) P3)) (= (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) P1)) (= (newAddr (alloc emptyHeap (O_Int 0))) P2)) (= (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) P6)) (= (getInt (read (write (newHeap (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (O_Int 42)) (newAddr (alloc emptyHeap (O_Int 0))))) P5))))
(assert (not (and (= (write (write (newHeap (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (O_Int 42)) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int (getInt (read (write (newHeap (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (O_Int 42)) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))))))) T7) (and (and (and (and (= (newAddr (alloc emptyHeap (O_Int 0))) P3) (= (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) P1)) (= (newAddr (alloc emptyHeap (O_Int 0))) P2)) (= (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) P6)) (= (getInt (read (write (newHeap (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (O_Int 42)) (newAddr (alloc emptyHeap (O_Int 0))))) P5)))))
(check-sat)
(pop 1)
(push 1)
(echo "query 4")
(declare-fun P0 () Addr)
(declare-fun P1 () Addr)
(declare-fun P10 () Addr)
(declare-fun P2 () Addr)
(declare-fun P3 () Addr)
(declare-fun P4 () Heap)
(declare-fun P5 () Int)
(declare-fun P6 () Addr)
(declare-fun P7 () Addr)
(declare-fun P8 () Heap)
(declare-fun P9 () Addr)
(assert (and (and (and (and (= P9 P6) (= P10 P1)) (= P7 P0)) (= P3 P2)) (= P8 (write P4 P6 (O_Int P5)))))
(assert (and (= (write (write (newHeap (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (O_Int 42)) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int (getInt (read (write (newHeap (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (O_Int 42)) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))))))) P4) (and (and (and (and (= (newAddr (alloc emptyHeap (O_Int 0))) P2) (= (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) P0)) (= (newAddr (alloc emptyHeap (O_Int 0))) P1)) (= (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) P6)) (= (getInt (read (write (newHeap (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (O_Int 42)) (newAddr (alloc emptyHeap (O_Int 0))))) P5))))
(assert (not (and (= (write (write (write (newHeap (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (O_Int 42)) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int (getInt (read (write (newHeap (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (O_Int 42)) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))))))) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (O_Int (getInt (read (write (newHeap (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (O_Int 42)) (newAddr (alloc emptyHeap (O_Int 0))))))) P8) (and (= (newAddr (alloc emptyHeap (O_Int 0))) P3) (= (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) P7)))))
(check-sat)
(pop 1)
(push 1)
(echo "query 5")
(declare-fun P0 () Addr)
(declare-fun P1 () Addr)
(declare-fun P2 () Addr)
(declare-fun P3 () Heap)
(declare-fun P4 () Addr)
(declare-fun T5 () Int)
(assert (= T5 (getInt (read P3 P1))))
(assert (and (and (= (write (newHeap (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) P0 (O_Int 42)) P3) (= (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) P0)) (and (and (= (newAddr (alloc emptyHeap (O_Int 0))) P2) (= (newAddr (alloc emptyHeap (O_Int 0))) P1)) (= P0 P4))))
(assert (not (and (and (= (getInt (read (write (newHeap (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (O_Int 42)) (newAddr (alloc emptyHeap (O_Int 0))))) T5) (= (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) P4)) (and (and (and (= (write (newHeap (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (O_Int 42)) P3) (= (newAddr (alloc emptyHeap (O_Int 0))) P2)) (= (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) P0)) (= (newAddr (alloc emptyHeap (O_Int 0))) P1)))))
(check-sat)
(pop 1)
(push 1)
(echo "query 6")
(declare-fun P0 () Heap)
(declare-fun T1 () Heap)
(declare-fun T2 () Addr)
(assert (and (= T2 (newAddr (alloc P0 (O_Int 0)))) (= T1 (newHeap (alloc P0 (O_Int 0))))))
(assert (= emptyHeap P0))
(assert (not (and (= (newAddr (alloc emptyHeap (O_Int 0))) T2) (= (newHeap (alloc emptyHeap (O_Int 0))) T1))))
(check-sat)
(pop 1)
(push 1)
(echo "query 7")
(declare-fun P0 () Addr)
(declare-fun P1 () Heap)
(declare-fun P2 () Heap)
(declare-fun P3 () Addr)
(declare-fun T4 () Heap)
(declare-fun T5 () Addr)
(assert (and (and (and (= T5 (newAddr (alloc P1 (O_Int 0)))) (= T4 (newHeap (alloc P1 (O_Int 0))))) (= P3 P0)) (= P1 (write P2 P0 (O_Int 3)))))
(assert (and (= (newAddr (alloc emptyHeap (O_Int 0))) P0) (= (newHeap (alloc emptyHeap (O_Int 0))) P2)))
(assert (not (and (= (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) T5) (and (= (newHeap (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) T4) (= (newAddr (alloc emptyHeap (O_Int 0))) P3)))))
(check-sat)
(pop 1)
(push 1)
(echo "query 8")
(declare-fun P0 () Addr)
(declare-fun P1 () Addr)
(declare-fun P2 () Addr)
(declare-fun P3 () Heap)
(declare-fun P4 () Int)
(declare-fun P5 () Addr)
(declare-fun T6 () Int)
(assert (= T6 (getInt (read P3 P5))))
(assert (and (and (= (getInt (read (write (newHeap (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (O_Int 42)) (newAddr (alloc emptyHeap (O_Int 0))))) P4) (= (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) P5)) (and (and (and (= (write (newHeap (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (O_Int 42)) P3) (= (newAddr (alloc emptyHeap (O_Int 0))) P2)) (= (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) P0)) (= (newAddr (alloc emptyHeap (O_Int 0))) P1))))
(assert (not (and (= (getInt (read (write (newHeap (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (O_Int 42)) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))))) T6) (and (and (and (and (and (= (write (newHeap (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (O_Int 42)) P3) (= (newAddr (alloc emptyHeap (O_Int 0))) P2)) (= (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) P0)) (= (newAddr (alloc emptyHeap (O_Int 0))) P1)) (= (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) P5)) (= (getInt (read (write (newHeap (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (O_Int 42)) (newAddr (alloc emptyHeap (O_Int 0))))) P4)))))
(check-sat)
(pop 1)
(push 1)
(echo "query 9")
(declare-fun P0 () Addr)
(declare-fun P1 () Addr)
(declare-fun P2 () Heap)
(declare-fun T3 () Int)
(assert (= T3 (getInt (read P2 P1))))
(assert (and (= (write (write (write (newHeap (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (O_Int 42)) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int (getInt (read (write (newHeap (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (O_Int 42)) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))))))) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (O_Int (getInt (read (write (newHeap (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (O_Int 42)) (newAddr (alloc emptyHeap (O_Int 0))))))) P2) (and (= (newAddr (alloc emptyHeap (O_Int 0))) P1) (= (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) P0))))
(assert (not (and (= (getInt (read (write (write (write (newHeap (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (O_Int 42)) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int (getInt (read (write (newHeap (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (O_Int 42)) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))))))) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (O_Int (getInt (read (write (newHeap (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (O_Int 42)) (newAddr (alloc emptyHeap (O_Int 0))))))) (newAddr (alloc emptyHeap (O_Int 0))))) T3) (and (and (= (write (write (write (newHeap (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (O_Int 42)) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int (getInt (read (write (newHeap (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (O_Int 42)) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))))))) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (O_Int (getInt (read (write (newHeap (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (O_Int 42)) (newAddr (alloc emptyHeap (O_Int 0))))))) P2) (= (newAddr (alloc emptyHeap (O_Int 0))) P1)) (= (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) P0)))))
(check-sat)
(pop 1)
(push 1)
(echo "query 10")
(declare-fun P0 () Addr)
(declare-fun P1 () Heap)
(assert (not (is-O_Int (read P1 P0))))
(assert (and (= (newAddr (alloc emptyHeap (O_Int 0))) P0) (= (newHeap (alloc emptyHeap (O_Int 0))) P1)))
(assert (not false))
(check-sat)
(pop 1)
(push 1)
(echo "query 11")
(declare-fun P0 () Addr)
(declare-fun P1 () Addr)
(declare-fun P2 () Heap)
(assert (not (is-O_Int (read P2 P0))))
(assert (and (= (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) P0) (and (= (newHeap (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) P2) (= (newAddr (alloc emptyHeap (O_Int 0))) P1))))
(assert (not false))
(check-sat)
(pop 1)
(push 1)
(echo "query 12")
(declare-fun P0 () Addr)
(declare-fun P1 () Addr)
(declare-fun P2 () Addr)
(declare-fun P3 () Heap)
(declare-fun P4 () Addr)
(assert (not (is-O_Int (read P3 P1))))
(assert (and (and (= (write (newHeap (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) P0 (O_Int 42)) P3) (= (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) P0)) (and (and (= (newAddr (alloc emptyHeap (O_Int 0))) P2) (= (newAddr (alloc emptyHeap (O_Int 0))) P1)) (= P0 P4))))
(assert (not false))
(check-sat)
(pop 1)
(push 1)
(echo "query 13")
(declare-fun P0 () Addr)
(declare-fun P1 () Addr)
(declare-fun P2 () Addr)
(declare-fun P3 () Heap)
(declare-fun P4 () Int)
(declare-fun P5 () Addr)
(assert (not (is-O_Int (read P3 P5))))
(assert (and (and (= (getInt (read (write (newHeap (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (O_Int 42)) (newAddr (alloc emptyHeap (O_Int 0))))) P4) (= (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) P5)) (and (and (and (= (write (newHeap (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (O_Int 42)) P3) (= (newAddr (alloc emptyHeap (O_Int 0))) P2)) (= (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) P0)) (= (newAddr (alloc emptyHeap (O_Int 0))) P1))))
(assert (not false))
(check-sat)
(pop 1)
(push 1)
(echo "query 14")
(declare-fun P0 () Int)
(declare-fun P1 () Addr)
(declare-fun P2 () Addr)
(declare-fun P3 () Addr)
(declare-fun P4 () Heap)
(declare-fun P5 () Int)
(declare-fun P6 () Addr)
(assert (not (is-O_Int (read P4 P2))))
(assert (and (= (getInt (read (write (newHeap (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (O_Int 42)) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))))) P0) (and (and (and (and (and (= (write (newHeap (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (O_Int 42)) P4) (= (newAddr (alloc emptyHeap (O_Int 0))) P3)) (= (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) P1)) (= (newAddr (alloc emptyHeap (O_Int 0))) P2)) (= (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) P6)) (= (getInt (read (write (newHeap (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (O_Int 42)) (newAddr (alloc emptyHeap (O_Int 0))))) P5))))
(assert (not false))
(check-sat)
(pop 1)
(push 1)
(echo "query 15")
(declare-fun P0 () Addr)
(declare-fun P1 () Addr)
(declare-fun P2 () Addr)
(declare-fun P3 () Heap)
(declare-fun P4 () Int)
(declare-fun P5 () Addr)
(assert (not (is-O_Int (read P3 P5))))
(assert (and (= (write (write (newHeap (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (O_Int 42)) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int (getInt (read (write (newHeap (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (O_Int 42)) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))))))) P3) (and (and (and (and (= (newAddr (alloc emptyHeap (O_Int 0))) P2) (= (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) P0)) (= (newAddr (alloc emptyHeap (O_Int 0))) P1)) (= (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) P5)) (= (getInt (read (write (newHeap (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (O_Int 42)) (newAddr (alloc emptyHeap (O_Int 0))))) P4))))
(assert (not false))
(check-sat)
(pop 1)
(push 1)
(echo "query 16")
(declare-fun P0 () Addr)
(declare-fun P1 () Addr)
(declare-fun P2 () Heap)
(assert (not (is-O_Int (read P2 P1))))
(assert (and (= (write (write (write (newHeap (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (O_Int 42)) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int (getInt (read (write (newHeap (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (O_Int 42)) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))))))) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (O_Int (getInt (read (write (newHeap (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (O_Int 42)) (newAddr (alloc emptyHeap (O_Int 0))))))) P2) (and (= (newAddr (alloc emptyHeap (O_Int 0))) P1) (= (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) P0))))
(assert (not false))
(check-sat)
(pop 1)
(push 1)
(echo "query 17")
(declare-fun P0 () Addr)
(declare-fun P1 () Addr)
(declare-fun P2 () Heap)
(declare-fun P3 () Int)
(assert (not (= P3 42)))
(assert (and (= (getInt (read (write (write (write (newHeap (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (O_Int 42)) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int (getInt (read (write (newHeap (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (O_Int 42)) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))))))) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (O_Int (getInt (read (write (newHeap (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (O_Int 42)) (newAddr (alloc emptyHeap (O_Int 0))))))) (newAddr (alloc emptyHeap (O_Int 0))))) P3) (and (and (= (write (write (write (newHeap (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (O_Int 42)) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int (getInt (read (write (newHeap (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (O_Int 42)) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))))))) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (O_Int (getInt (read (write (newHeap (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) (O_Int 42)) (newAddr (alloc emptyHeap (O_Int 0))))))) P2) (= (newAddr (alloc emptyHeap (O_Int 0))) P1)) (= (newAddr (alloc (write (newHeap (alloc emptyHeap (O_Int 0))) (newAddr (alloc emptyHeap (O_Int 0))) (O_Int 3)) (O_Int 0))) P0))))
(assert (not false))
(check-sat)
(pop 1)
(exit)
