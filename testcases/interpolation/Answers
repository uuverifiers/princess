Loading columnRed.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 4), simplifying (4), interpolating ...

VALID

Interpolants:
\exists int v0; x = -2*v0
Loading cryptarithm.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 116), simplifying (86), interpolating ...

VALID

Interpolants:
true
Loading eqProof2.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 15), simplifying (15), interpolating ...

VALID

Interpolants:
c + b = 26
Loading eqProof3.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 6), simplifying (6), interpolating ...

VALID

Interpolants:
c + b = 26
Loading eqProof4.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 5), simplifying (5), interpolating ...

VALID

Interpolants:
y != 2*d
Loading eqProof5.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 5), simplifying (5), interpolating ...

VALID

Interpolants:
y != 2*d
Loading eqProof6.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 6), simplifying (6), interpolating ...

VALID

Interpolants:
c + b - a != 0
Loading eqProof.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 15), simplifying (15), interpolating ...

VALID

Interpolants:
a = 26
Loading surprising.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 8), simplifying (8), interpolating ...

VALID

Interpolants:
\exists int v0; 5*v0 + y = -1 | \exists int v0; y = -5*v0
Loading inEqProof0.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 7), simplifying (7), interpolating ...

VALID

Interpolants:
x >= 5
Loading inEqProof1.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 2), simplifying (2), interpolating ...

VALID

Interpolants:
y = x
Loading inEqProof2.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 12), simplifying (13), interpolating ...

VALID

Interpolants:
y - x = -3 | y - x = -2 | y - x = -1 | y = x
Loading inEqProof3.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 2), simplifying (2), interpolating ...

VALID

Interpolants:
x1 >= 1
Loading inEqProof.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 5), simplifying (5), interpolating ...

VALID

Interpolants:
3*b >= a
Loading int_incompleteness2.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 8), simplifying (8), interpolating ...

VALID

Interpolants:
x1 + x2 >= 5 | (x1 + x2 = 4 & \exists int v0; 6*v0 + x2 = 2) | (x1 + x2 = 4 & \exists int v0; 6*v0 + x2 = 1) | (x1 + x2 >= 3 & \exists int v0; 6*v0 + x1 = 1) | (x1 + x2 >= 3 & \exists int v0; x2 = -6*v0) | (\exists int v0; 6*v0 + x1 = 2 & ((x1 + x2 = 3 & \exists int v0; 6*v0 + x2 = 1) | (x1 + x2 = 2 & \exists int v0; x2 = -6*v0))) | (\exists int v0; 6*v0 + x1 = 1 & ((x1 + x2 = 2 & \exists int v0; 6*v0 + x2 = 1) | (x1 + x2 = 1 & \exists int v0; x2 = -6*v0)))
Loading int_incompleteness3.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 3), simplifying (3), interpolating ...

VALID

Interpolants:
\exists int v0; 6*v0 + x1 = 2
Loading pidgeon.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 98), simplifying (158), interpolating ...

VALID

Interpolants:
x3 = x1 | x2 = x1
Loading pidgeonSimplified.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 23), simplifying (37), interpolating ...

VALID

Interpolants:
x2 = x1 | (x3 = x1 & x2 - x1 = 1) | (x3 = x1 & x2 - x1 = -1)
Loading pidgeonSuperSimplified.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 3), simplifying (3), interpolating ...

VALID

Interpolants:
x2 = x1
Loading prog.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 8), simplifying (8), interpolating ...

VALID

Interpolants:
a >= 3 | (a >= 0 & \exists int v0; a = -2*v0)
3*b >= a
c - a >= 1
Loading prop0.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 17), simplifying (15), interpolating ...

VALID

Interpolants:
p -> q
Loading prop1.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 19), simplifying (19), interpolating ...

VALID

Interpolants:
\exists int v0; a = -2*v0 & (2*c + a - 6*b >= 2 | !p)
Loading prop2.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 4), simplifying (4), interpolating ...

VALID

Interpolants:
p(14, 2*x)
Loading prop3.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 4), simplifying (4), interpolating ...

VALID

Interpolants:
x = 13
Loading prop4.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 7), simplifying (7), interpolating ...

VALID

Interpolants:
\forall int v0; (2*v0 != y | p(v0))
Loading prop5.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 17), simplifying (18), interpolating ...

VALID

Interpolants:
p(2) | p(1)
p(3) | p(2) | p(1) | p(0)
Loading queen2-1.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 9), simplifying (13), interpolating ...

VALID

Interpolants:
x1 - x0 = 1 | x1 - x0 = -1 | x1 = x0 | x0 - x2 >= 2
Loading queen3-1.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 9), simplifying (13), interpolating ...

VALID

Interpolants:
x1 - x0 = 1 | x1 - x0 = -1 | x1 = x0 | x0 - x2 >= 2
Loading super_queen2-1.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 10), simplifying (13), interpolating ...

VALID

Interpolants:
x1 - x0 = 1 | x1 - x0 = -1 | x0 - x2 >= 2
Loading super_queen3-1.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 11), simplifying (17), interpolating ...

VALID

Interpolants:
x2 - x1 = 2 | x2 - x1 = -2 | x2 - x1 = 1 | x2 - x1 = -1
Loading cav-ex4b.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 81), simplifying (127), interpolating ...

VALID

Interpolants:
\forall int v0; (-1 >= v0 | \forall int v1; (v1 - n >= 1 | v0 - v1 >= 1 | -1 >= v1 | h'(f(v1)) >= h'(f(v0))))
\exists int v0; (v0 >= 0 & \exists int v1; (n >= v1 & v1 >= v0 & v1 >= 0 & h'(f(v0)) - h'(f(v1)) >= 1))
Loading quan.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 4), simplifying (7), interpolating ...

VALID

Interpolants:
c >= 0
Loading ring_2exp10_3vars_2ite_unsat.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 2470), simplifying (1384), interpolating ...

VALID

Interpolants:
v2 >= 1024 | (v_princess_0 - 2*v2 = -1024 & 766 >= v2 & v2 >= 512) | (v_princess_0 - 2*v2 = -1024 & v2 >= 767) | (2*v2 - v_princess_0 >= -1 & 1531 >= v_princess_0 & v_princess_0 >= 2*v2 & 511 >= v2 & ((v_princess_0 = 2*v2 & 257 >= v2) | (v_princess_0 = 2*v2 & v2 >= 258)) & ((v_princess_0 = 2*v2 & 256 >= v2) | (v_princess_0 = 2*v2 & v2 >= 257)))
Loading arrays0.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 7), simplifying (11), interpolating ...

VALID

Interpolants:
true
true
true
true
true
prob_index'2 != 1 | select(prres0'1, 1) = 1
prob_index'2 != 1 | select(prres0'1, 1) = 1
prob_index'2 != 1
prob_index'2 != 1
Loading constOrderBug.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 98), simplifying (120), interpolating ...

VALID

Interpolants:
sym2 = sym1 & (sym1 = 0 | (2 >= sym1 & sym1 >= 1))
Loading strange_concurrency.pri ...
Preprocessing ...
Constructing countermodel ...

INVALID

Countermodel:
id1 = 0 & id0 = 3 & write1' = 49 & write0' = 48 & write1 = 49 & write0 = 48 & read1' = 49 & read0' = 48 & read1 = 49 & read0 = 48 & A4 = 54 & A3 = 53 & A2 = 52 & A1 = 51 & A0 = 50 & j2' = 0 & j1' = 15 & j0' = 14 & j2 = 2 & j1 = 1 & j0 = 0 & i2' = 34 & i1' = 34 & i0' = 34 & i2 = 48 & i1 = 48 & i0 = 48 & select(53, 49) = 59 & select(52, 49) = 59 & select(52, 48) = 56 & select(51, 49) = 58 & select(51, 48) = 56 & select(50, 49) = 58 & select(50, 48) = 55 & store(53, 49, 60) = 54 & store(52, 48, 57) = 53 & store(51, 49, 59) = 52 & store(50, 48, 56) = 51 & T(48, 48, 1, 2, 51, 52, 49, 49) & T(48, 48, 0, 1, 50, 51, 48, 48) & T(34, 34, 15, 0, 53, 54, 49, 49) & T(34, 34, 14, 15, 52, 53, 48, 48)
Loading wrongInterpolant3.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 49), simplifying (63), interpolating ...

VALID

Interpolants:
1 >= j1 & \exists int v0; 4*v0 + j1 + i1 = 1
Loading omegaBug.pri ...
Preprocessing ...
Constructing countermodel ...

INVALID

Countermodel:
sym9 = 0 & sym8 = 0 & sym7 = 35 & sym6 = 34 & sym5 = 1 & sym4 = 2 & sym3 = 1 & sym2 = 33 & sym1 = 33 & sym0 = 1 & select(35, 1) = 12 & select(34, 1) = 12 & store(34, 2, 3) = 35 & store(33, 1, 12) = 34 & inUnsigned(32, 2) & inUnsigned(32, 1) & inUnsigned(32, 0) & inSigned(32, 1) & inArray(35) & inArray(34) & inArray(33)
Loading splitEq.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 89), simplifying (116), interpolating ...

VALID

Interpolants:
10000000 >= x & x >= -1000000
Loading incorrectPredInterpolant.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 9), simplifying (13), interpolating ...

VALID

Interpolants:
e - d >= 2 | (e - d = 1 & p(-1*d)) | (e = 0 & (-1 >= d | (d = 0 & p(0))))
Loading certificateBug.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 1), simplifying (1), interpolating ...

VALID

Interpolants:
true
Loading missingOmegaSupport.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 10), simplifying (10), interpolating ...

VALID

Interpolants:
x5 + x8 + x3 - x6 - x2 >= -1
Loading bignum_lia1.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 289), simplifying (188), interpolating ...

VALID

Interpolants:
x4 >= 19670160000*x1 | x4 >= 16039976000*x1 | x4 >= 12890400000*x1 | x4 >= 10511440000*x1 | x4 >= 1
Loading linear-combination-bug.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 13), simplifying (13), interpolating ...

VALID

Interpolants:
0 >= x1 & x1 >= -4
Loading div-right-bug.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 15), simplifying (15), interpolating ...

VALID

Interpolants:
\exists int v0; 10*v0 + c = 2
Loading tree.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 35), simplifying (94), interpolating ...

VALID

Interpolants:
value(c) = 42 & right(a) = c & value(right(left(a))) = 8
Loading axiom-instantiation-bug.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 10), simplifying (13), interpolating ...

VALID

Interpolants:
\forall int v0; 2*v0 + a != -1
Loading nonlin.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 4), simplifying (4), interpolating ...

VALID

Interpolants:
x = 1
y != 3
Loading adt-interpolation.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 7), simplifying (11), interpolating ...

VALID

Interpolants:
!is_nil(l)
Loading adt-interpolation2.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 6), simplifying (10), interpolating ...

VALID

Interpolants:
!is_nil(l)
Loading bool-interpolation.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 19), simplifying (31), interpolating ...

VALID

Interpolants:
!f(false) & !f(true)
Loading bv-interpolation-1.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 73), simplifying (90), interpolating ...

VALID

Interpolants:
(a = 49.\as[signed bv[8]] | (48 >= a.\as[int] & a.\as[int] >= 0)) & (a = 0.\as[signed bv[8]] | (49 >= a.\as[int] & a.\as[int] >= 2))
3*b.\as[int] >= a.\as[int] & 24 >= b.\as[int] & b.\as[int] >= 0
c.\as[int] - a.\as[int] >= 1
Loading bv-interpolation-2.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 56), simplifying (67), interpolating ...

VALID

Interpolants:
a != 1.\as[signed bv[8]] & a.\as[int] >= 0
3*b.\as[int] >= a.\as[int]
c.\as[int] - a.\as[int] >= 1
Loading bv-interpolation-3.smt2 ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 18), simplifying (21), interpolating ...

unsat
(
  (or (bvule (_ bv1000 16) b) (bvsle ((_ zero_extend 1) b) ((_ zero_extend 1) a)))
  (bvule (_ bv1000 16) b)
)
Loading bv-interpolation-4.smt2 ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 96), simplifying (111), interpolating ...

unsat
(
  (and (bvule (_ bv1 8) a) (and (or (bvsle (_ bv1793 11) (bvadd (bvmul (_ bv2046 11) ((_ zero_extend 3) b)) ((_ zero_extend 3) a))) (bvule b (_ bv127 8))) (or (bvsle (_ bv1 11) (bvadd (bvmul (_ bv2046 11) ((_ zero_extend 3) b)) ((_ zero_extend 3) a))) (bvule (_ bv128 8) b))))
  (and (and (bvule a (_ bv254 8)) (bvule (_ bv1 8) a)) (and (or (= (bvadd (bvmul (_ bv2 11) ((_ zero_extend 3) b)) (bvneg ((_ zero_extend 3) a))) (_ bv255 11)) (bvule b (_ bv127 8))) (or (= (bvadd (bvmul (_ bv2 11) ((_ zero_extend 3) b)) (bvneg ((_ zero_extend 3) a))) (_ bv2047 11)) (bvule (_ bv128 8) b))))
)
Loading bv-interpolation-5.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 10), simplifying (13), interpolating ...

VALID

Interpolants:
i1_3_0 = 100
i2_2_0 = 101
i1_1_0 != 75
i1_1_0 = 75
i2_2_0 != 101
i1_3_0 != 100
Loading bv-interpolation-6.smt2 ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 7), simplifying (7), interpolating ...

unsat
(
  (not (= b (_ bv11 8)))
)
Loading bv-interpolation-8.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 10), simplifying (22), interpolating ...

VALID

Interpolants:
(2*z.\as[int] + 4*y.\as[int] + 3*x.\as[int]).\as[bv[16]] = 0.\as[bv[16]]
(2 + 2*y.\as[int] + 2*x.\as[int]).\as[bv[16]] != 0.\as[bv[16]]
Loading sorts.pri ...
Preprocessing ...
Warning: ignoring some quantifiers
Constructing countermodel ...
Found proof (size 9), simplifying (15), interpolating ...

VALID

Interpolants:
\forall S v0; f(v0) = b
c != b
Loading quadraticInEq6-interpolation.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 56), simplifying (89), interpolating ...

VALID

Interpolants:
b != 0 & a * b >= 1
(b * d = 0 & d != 0 & b != 0) | b * d >= 1 | 0 >= a * c
(b * d = 0 & d != 0 & b != 0) | b * d >= 1
Loading function-bug.smt2 ...
Warning: echo is only supported in incremental mode (option +incremental), ignoring it
Warning: echo is only supported in incremental mode (option +incremental), ignoring it
Preprocessing ...
Constructing countermodel ...
Found proof (size 20), simplifying (29), interpolating ...

unsat
(
  (or (= (select a_0 (+ 1 ULTIMATE.start_i_-1)) 23) (and (and (not (= (+ ULTIMATE.start_i_-1 (* (- 1) upper_-1)) (- 1))) (<= 0 (+ (* (- 1) ULTIMATE.start_i_-1) upper_-1))) (or (not (= ULTIMATE.start_i_-1 upper_-1)) (= (select a_0 upper_-1) 23))))
  (or (= (select a_0 (+ 1 ULTIMATE.start_i_-1)) 23) (= (select a_0 ULTIMATE.start_i_-1) 23))
  (= (select a_0 (+ 1 ULTIMATE.start_i_-1)) 23)
)
Loading function-bug2.smt2 ...
Warning: echo is only supported in incremental mode (option +incremental), ignoring it
Warning: echo is only supported in incremental mode (option +incremental), ignoring it
Preprocessing ...
Constructing countermodel ...
Found proof (size 19), simplifying (28), interpolating ...

unsat
(
  (or (= (f (+ 1 ULTIMATE.start_i_-1)) 23) (and (and (not (= (+ ULTIMATE.start_i_-1 (* (- 1) upper_-1)) (- 1))) (<= 0 (+ (* (- 1) ULTIMATE.start_i_-1) upper_-1))) (or (not (= ULTIMATE.start_i_-1 upper_-1)) (= (f upper_-1) 23))))
  (or (= (f (+ 1 ULTIMATE.start_i_-1)) 23) (= (f ULTIMATE.start_i_-1) 23))
  (= (f (+ 1 ULTIMATE.start_i_-1)) 23)
)
Loading pred-unify-bug.smt2 ...
"starting trace check"
unsat
"interpolants-3"
((and (not (not (select |#valid_13| main_~p~4.base_18))) (<= 0 (+ (- 8) (select |#length_13| main_~p~4.base_18)))))
Loading rule60_list2.c_false-unreach-call_1.cil.c.smt2 ...
unsat
((forall ((var0 Int)) (not (= (+ list_add_~__cil_tmp5~16_44 (* (- 1) list_add_~__cil_tmp4~16_42)) (* (- 4294967296) var0)))))
Loading function-bug3.smt2 ...
"Start declaration of constants"
"Finished declaration of constants"
"Start declaration of functions"
"Finished declaration of functions"
"Start declaration of global variables"
"Finished declaration global variables"
"Start declaration of local variables"
"Finished declaration local variables"
"starting trace check"
unsat
Loading simplifier.smt2 ...
unsat
Warning: not all asserted formulas are mentioned in interpolant specification, putting remaining formulas in the last/root partition
(true
true
(= main_~a~4.offset_2 0)
(and (and (= main_~p~4.offset_3 0) (= main_~p~4.base_3 main_~a~4.base_2)) (= main_~a~4.offset_2 0))
(and (and (= main_~p~4.offset_3 0) (= main_~p~4.base_3 main_~a~4.base_2)) (= main_~a~4.offset_2 0))
(and (and (= main_~p~4.offset_3 0) (= main_~p~4.base_3 main_~a~4.base_2)) (= main_~a~4.offset_2 0))
(and (and (and (= main_~p~4.offset_3 0) (= main_~p~4.base_3 main_~a~4.base_2)) (= main_~a~4.offset_2 0)) (or (not (= |#offset~STRUCT#?h~INT?n~$Pointer$#~h| 0)) (not (= (select (select |#memory_int_6| main_~p~4.base_3) 0) 1))))
(or (or (not (= |#offset~STRUCT#?h~INT?n~$Pointer$#~n| 4)) (not (= |#offset~STRUCT#?h~INT?n~$Pointer$#~h| 0))) (not (= (select (select |#memory_int_7| main_~p~4.base_7) main_~p~4.offset_7) 1)))
(or (or (not (= |#offset~STRUCT#?h~INT?n~$Pointer$#~n| 4)) (not (= |#offset~STRUCT#?h~INT?n~$Pointer$#~h| 0))) (not (= (select (select |#memory_int_7| main_~p~4.base_7) main_~p~4.offset_7) 1)))
(or (or (not (= |main_#t~mem15_9| 1)) (not (= |#offset~STRUCT#?h~INT?n~$Pointer$#~n| 4))) (not (= |#offset~STRUCT#?h~INT?n~$Pointer$#~h| 0)))
(or (not (= |#offset~STRUCT#?h~INT?n~$Pointer$#~n| 4)) (not (= |#offset~STRUCT#?h~INT?n~$Pointer$#~h| 0)))
(or (not (= |#offset~STRUCT#?h~INT?n~$Pointer$#~n| 4)) (not (= |#offset~STRUCT#?h~INT?n~$Pointer$#~h| 0))))
Loading smtTyping.smt2 ...
unsat
Warning: not all asserted formulas are mentioned in interpolant specification, putting remaining formulas in the last/root partition
((and (and (not (= |cstpncpy_~#dst.base_0| 0)) (not (select |old(#valid)_-1| |cstpncpy_~#dst.base_0|))) (and (forall ((var0 Int)) (or (= var0 |cstpncpy_~#dst.base_0|) (or (not (select |#valid_0| var0)) (select |old(#valid)_-1| var0)))) (forall ((var0 Int)) (or (not (not (select |#valid_0| var0))) (not (select |old(#valid)_-1| var0))))))
(and (and (not (= |cstpncpy_~#dst.base_0| 0)) (not (select |old(#valid)_-1| |cstpncpy_~#dst.base_0|))) (and (forall ((var0 Int)) (or (= var0 |cstpncpy_~#dst.base_0|) (or (not (select |#valid_0| var0)) (select |old(#valid)_-1| var0)))) (forall ((var0 Int)) (or (not (not (select |#valid_0| var0))) (not (select |old(#valid)_-1| var0))))))
(and (forall ((var0 Int)) (or (not (select |#valid_2| var0)) (select |old(#valid)_-1| var0))) (exists ((var0 Int)) (and (and (not (= var0 0)) (not (select |old(#valid)_-1| var0))) (forall ((var1 Int)) (or (= var1 var0) (or (not (not (select |#valid_2| var1))) (not (select |old(#valid)_-1| var1)))))))))
Loading matchCheckBug.smt2 ...
unsat
Loading treeInterpolation1.smt2 ...
unsat
((<= 0 (f x))
(<= 0 (+ (- 1) (* (- 1) (f y)))))
Loading enum-interpolation.smt2 ...
unsat
((= x blue))
Loading assertion-problem.smt2 ...
unsat
((and (= tmp@3 |glob2::pathlim@2|) (and (exists ((var0 Int)) (= (bv2nat |glob2::p@3|) (* (- 4) var0))) (or (and (and (= (bvadd ((_ zero_extend 2) |glob2::p@3|) (bvneg ((_ zero_extend 2) |glob2::pathlim@2|))) (_ bv17179869180 34)) (and (bvule |glob2::pathlim@2| (_ bv4294967292 32)) (bvule (_ bv4 32) |glob2::pathlim@2|))) (or (bvule (_ bv2147483649 32) |glob2::pathlim@2|) (and (bvule |glob2::pathlim@2| (_ bv2147483640 32)) (bvule (_ bv8 32) |glob2::pathlim@2|)))) (and (= |glob2::p@3| (_ bv4294967292 32)) (= |glob2::pathlim@2| (_ bv0 32)))))))
Loading prp-2-17.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 118510), simplifying (9181), interpolating ...

VALID

Interpolants:
(v_princess_0 = 18 & i844 != 1) | (v_princess_0 != 22 & i844 != 1)
Loading prp-3-18.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 21746), simplifying (4929), interpolating ...

VALID

Interpolants:
v_princess_0 != 22 & i844 != 1
Loading adt-interpolation-unfold.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 66), simplifying (131), interpolating ...

VALID

Interpolants:
\size(y) != 3
succ(succ(one)) = x
y = x
Loading adt-interpolation-unfold2.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 44), simplifying (65), interpolating ...

VALID

Interpolants:
nil = u1
\size(u1) != 1
Loading adt-interpolation-unfold3.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 152), simplifying (215), interpolating ...

VALID

Interpolants:
u3 = u1 | \size(u3) != 3
\size(u3) != 3 | ((U2(Col1(blue)) = u3 | U2(Col1(blue)) = u2) & (U2(Col1(red)) = u3 | U2(Col1(red)) = u2))
Loading treeInterpolation2.smt2 ...
unsat
Warning: not all asserted formulas are mentioned in interpolant specification, putting remaining formulas in the last/root partition
((forall ((var0 (Array Int Bool))) (or (= var0 |old(#valid)_4|) (or (or (exists ((var1 Int)) (and (and (not (= (select |#valid_4| var1) (select var0 var1))) (not (not (select var0 var1)))) (not (not (select var0 var1))))) (exists ((var1 Int)) (and (and (not (= (select |#valid_4| var1) (select var0 var1))) (not (not (select var0 var1)))) (select |#valid_4| var1)))) (or (exists ((var1 Int)) (and (and (not (= (select |#valid_4| var1) (select var0 var1))) (not (not (select |#valid_4| var1)))) (not (not (select var0 var1))))) (exists ((var1 Int)) (and (and (not (= (select |#valid_4| var1) (select var0 var1))) (not (not (select |#valid_4| var1)))) (select |#valid_4| var1)))))))
(and (and (forall ((var0 Int)) (or (= (select |old(#valid)_5| var0) (select |#valid_13| var0)) (not (select |#valid_13| var0)))) (forall ((var0 Int)) (or (or (= (select |old(#valid)_5| var0) (select |#valid_13| var0)) (not (select |#valid_13| var0))) (not (select |old(#valid)_5| var0))))) (and (forall ((var0 Int)) (or (or (= (select |old(#valid)_5| var0) (select |#valid_13| var0)) (not (select |old(#valid)_5| var0))) (not (select |#valid_13| var0)))) (forall ((var0 Int)) (or (or (= (select |old(#valid)_5| var0) (select |#valid_13| var0)) (not (select |old(#valid)_5| var0))) (not (select |old(#valid)_5| var0)))))))
Loading surprising25.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 8), interpolating ...

VALID

Interpolants:
\exists int v0; (25*v0 - y >= -13 & y - 25*v0 >= -10 & 50*v0 >= 0 & 25*v0 + y >= -19 & -25*v0 >= y)
Loading bignum_lia1.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 289), interpolating ...

VALID

Interpolants:
x4 >= 19670160000*x1 | x4 >= 16039976000*x1 | x4 >= 12890400000*x1 | x4 >= 10511440000*x1 | x4 >= 7999 | \exists int v0; (-4000 >= -4000*v0 & 4000*v0 - x4 >= -3998 & x4 >= 4000*v0)
Loading ring_2exp10_3vars_0ite_unsat.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 1203)

VALID
Loading bv-interpolation-9.pri ...
Preprocessing ...
Constructing countermodel ...
Found proof (size 24), simplifying (21), interpolating ...

VALID

Interpolants:
-1*inv_main4_1_0 + -1*inv_main4_1_1 >= 1
inv_main4_2_1 != 1
inv_main4_3_1 != 0
